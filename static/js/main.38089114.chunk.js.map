{"version":3,"sources":["component/Navbar.js","component/Textform.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","tabindex","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","showAlert","backgroundColor","rows","newText","toUpperCase","toLowerCase","toString","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","msg","role","word","lower","charAt","slice","capitalize","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.38089114.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li> */}\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">Link</a>\r\n        </li> */}\r\n        <li className=\"nav-item dropdown\">\r\n          {/* <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a> */}\r\n          {/* <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul> */}\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">{props.aboutText}</a>\r\n        </li>\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        \r\n    )\r\n}\r\n// from chapter 6\r\n// Navbar.PropTypes = {\r\n//     title: PropTypes.string.isRequired,\r\n//     aboutText: PropTypes.string\r\n// }\r\n// Navbar.defaultprops = {\r\n//     title: 'set title here',\r\n//     aboutText: 'About text here'\r\n// };\r\n","import React, {useState} from  'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n    console.log(\"Uppercase Was Clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n        }\r\n        const handleClearClick = () =>{\r\n            let newText = '';\r\n            setText(newText)\r\n            props.showAlert(\"Text cleared!\", \"success\");\r\n            }\r\n            const handleReverseClick = () =>{\r\n                let newText = text.toString();\r\n                setText(newText)\r\n            props.showAlert(\"Text reversed!\", \"success\"); \r\n              }\r\n    const handleOnchange = (event) =>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n        props.showAlert(\"text copy to clipboard\", \"success\");\r\n        \r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"text copy to clipboard!\", \"success\");\r\n\r\n    }\r\n    const handleExtraSpace = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"extra space remove!\", \"sucess\")\r\n    }\r\n    const [text, setText] = useState('');\r\nreturn (\r\n    <>\r\n<div className=\"container\" style={{color: props.mode==='#258d5c'?'white':'black'}}>\r\n    <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor: props.mode==='#258d5c'?'grey':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleReverseClick}>convert in bold</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={ handleExtraSpace}>Remove Extra Spaces</button>\r\n\r\n</div>\r\n<div className=\"container my-3\" style={{color: props.mode==='#258d5c'?'white':'black'}}>\r\n    <h2>Your summary</h2>\r\n    <b>{text.split(\" \").length}words and {text.length} characters</b>\r\n    <b>{0.008 * text.split(\" \").length} Minutes read</b>\r\n    <h3>preview</h3>\r\n    <p>{text.length>0?text:\"Enter something in the  textbox above to preview it here\"}</p>\r\n</div>\r\n    </>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n    return (\r\n        props.alert &&<div className={`alert alert-${props.alert.msg} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import { useState } from 'react';\nimport './App.css';\n// import About from './component/About';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/Textform';\nimport React, { useState } from 'react'\nimport Alert from './component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App(){\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n        setAlert(null);\n    }, 3000);\n\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#258d5c';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Dark mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Download TextUtils Now';\n      // }, 1500);\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Light mode';\n    }\n  }\n  return(\n<>\n\n{/* <Navbar title=\"TextUtils\" aboutText=\"About Us\" home=\"Home\" />  */}\n {/* <Navbar/> */}\n {/* <Router> */}\n <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n <Alert alert={alert}/>\n<div className=\"container my-3\">\n{/* <Switch> */}\n  {/* reason to write exact is react take correcpodence file */}\n  {/* /users -->component 1\n  /users/home -->-->component 2  */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n </div>\n{/* </Router> */}\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}